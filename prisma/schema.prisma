generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol", "fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String    @id @default(cuid())
    createdAt     DateTime  @default(now())
    name          String
    email         String    @unique
    emailVerified DateTime?
    image         String?
    admin         Boolean
    orders        Order[]
    cart          Product[]

    // cross relation rows
    accounts Account[]
    sessions Session[]
}

model Product {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    name        String?
    images      String[]
    description String?
    price       Float
    stock       Int
    Category    Category? @relation(fields: [categoryId], references: [id])

    // cross relation rows
    orders     Order[]
    user       User[]
    categoryId String?
}

model Category {
    id          String   @id @default(cuid())
    createdAt   DateTime @default(now())
    name        String?
    description String?

    // cross relation rows
    products Product[]
}

model Order {
    id          String    @id @default(cuid())
    createdAt   DateTime  @default(now())
    completedAt DateTime?
    user        User      @relation(fields: [userId], references: [id])
    userId      String
    total       Float
    status      String
    products    Product[]
    delivery    Boolean
}
